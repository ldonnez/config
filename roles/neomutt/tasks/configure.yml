- name: Symlink .mbsyncrc
  when: ansible_os_family != "Debian"
  ansible.builtin.file:
    src: "{{ dotfiles_directory_path }}/.mbsyncrc"
    dest: "{{ ansible_env.HOME }}/.mbsyncrc"
    state: link
  tags:
    - install

- name: Symlink .mbsyncrc
  when: ansible_os_family == "Debian"
  ansible.builtin.file:
    src: "{{ dotfiles_directory_path }}/.mbsyncrc.old"
    dest: "{{ ansible_env.HOME }}/.mbsyncrc"
    state: link
  tags:
    - install

- name: Symlink .muttrc
  ansible.builtin.file:
    src: "{{ dotfiles_directory_path }}/.muttrc"
    dest: "{{ ansible_env.HOME }}/.muttrc"
    state: link
  tags:
    - install

- name: Symlink .mutt
  ansible.builtin.file:
    src: "{{ dotfiles_directory_path }}/.mutt"
    dest: "{{ ansible_env.HOME }}/.mutt"
    state: link
  tags:
    - install

- name: Symlink .mutt-alias
  ansible.builtin.file:
    src: "{{ private_dotfiles_path }}/.mutt-alias"
    dest: "{{ ansible_env.HOME }}/.mutt-alias"
    state: link
  tags:
    - install

- name: Symlink .msmtprc
  ansible.builtin.file:
    src: "{{ dotfiles_directory_path }}/.msmtprc"
    dest: "{{ ansible_env.HOME }}/.msmtprc"
    state: link
  tags:
    - install

- name: Symlink .urlview
  ansible.builtin.file:
    src: "{{ dotfiles_directory_path }}/.urlview"
    dest: "{{ ansible_env.HOME }}/.urlview"
    state: link
  tags:
    - install

- name: Symlink.mailcap
  ansible.builtin.file:
    src: "{{ dotfiles_directory_path }}/.mailcap"
    dest: "{{ ansible_env.HOME }}/.mailcap"
    state: link
  tags:
    - install

- name: Symlink .notmuch-config
  ansible.builtin.file:
    src: "{{ dotfiles_directory_path }}/.notmuch-config"
    dest: "{{ ansible_env.HOME }}/.notmuch-config"
    state: link
  tags:
    - install

- name: Ensure mail directories
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.mail/{{ item }}"
    recurse: true
    state: directory
  loop:
    - gmail
  tags:
    - install

- name: Check mail every 2 minutes with cron
  when: configure_mbsync_with_cron
  tags:
    - install

  block:
    - name: Getting flock binary location
      ansible.builtin.command: which flock
      register: neomutt_flock_binary

    - name: Check mail every minute with cron
      ansible.builtin.cron:
        name: "check mail"
        minute: "*/2"
        job: "{{ neomutt_flock_binary.stdout }} -w 0 /var/lock/mbsync.lock bash -c $HOME/.mutt/sync-mail.sh"

- name: Check mail every 2 minutes with systemd
  when: ansible_os_family == "Debian" and not configure_mbsync_with_cron
  tags:
    - install

  block:
    - name: Ensure ~/.config/systemd/user
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.config/systemd/user"
        state: directory
        recurse: true

    - name: Copy mbsync.service file
      ansible.builtin.copy:
        src: mbsync.service
        dest: "{{ ansible_env.HOME }}/.config/systemd/user"
        mode: "0700"

    - name: Copy mbsync.timer file
      ansible.builtin.copy:
        src: mbsync.timer
        dest: "{{ ansible_env.HOME }}/.config/systemd/user"
        mode: "0700"

    - name: Reload systemd
      become: true
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Start systemd timer
      ansible.builtin.systemd:
        name: mbsync.timer
        state: started
        scope: user
        enabled: true

- name: Check mail every 2 minutes with launchctl
  when: ansible_os_family == "Darwin" and not configure_mbsync_with_cron
  tags:
    - install

  block:
    - name: Stop homebrew isync services
      ansible.builtin.command: brew services stop isync

    - name: Unload homebrew.mxcl.isync.plist
      ansible.builtin.command: launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.isync.plist

    - name: Delete existing homebrew.mxcl.isync.plist
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/Library/LaunchAgents/homebrew.mxcl.isync.plist"
        state: absent

    - name: Install local.isync.plist
      ansible.builtin.copy:
        src: local.isync.plist
        dest: "{{ ansible_env.HOME }}/Library/LaunchAgents/"
        mode: "0600"

    - name: Load local.isync.plist
      ansible.builtin.command: "launchctl load {{ ansible_env.HOME }}/Library/LaunchAgents/local.isync.plist"

    - name: Starting isync
      ansible.builtin.command: launchctl start local.isync
      when: ansible_os_family == "Darwin"
